---
import { ViewTransitions } from "astro:transitions";

import Seo from "../components/Seo.astro";

const { title, description, robots } = Astro.props;
---

<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
  } else {
    document.documentElement.classList.add("light");
  }
  window.localStorage.setItem("theme", theme);
</script>

<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.jpg" />
    <meta name="generator" content={Astro.generator} />
    <ViewTransitions />
    <Seo {title} {description} {robots} />
    <script
      src="https://unpkg.com/htmx.org@1.9.9"
      integrity="sha384-QFjmbokDn2DjBjq+fM+8LUIVrAgqcNW2s0PjAxHETgRn9l4fvX31ZxDxvwQnyMOX"
      crossorigin="anonymous"
      is:inline></script>
    <script>
      // @ts-expect-error
      !(function (t, e) {
        var o, n, p, r;
        e.__SV || // @ts-expect-error
          ((window.posthog = e),
          (e._i = []),
          (e.init = function (i, s, a) {
            function g(t, e) {
              var o = e.split(".");
              2 == o.length && ((t = t[o[0]]), (e = o[1])),
                (t[e] = function () {
                  t.push([e].concat(Array.prototype.slice.call(arguments, 0)));
                });
            }
            ((p = t.createElement("script")).type = "text/javascript"),
              (p.async = !0),
              (p.src = s.api_host + "/static/array.js"),
              (r = t.getElementsByTagName("script")[0]).parentNode.insertBefore(
                p,
                r,
              );
            var u = e;
            for (
              void 0 !== a ? (u = e[a] = []) : (a = "posthog"),
                u.people = u.people || [],
                u.toString = function (t) {
                  var e = "posthog";
                  return (
                    "posthog" !== a && (e += "." + a), t || (e += " (stub)"), e
                  );
                },
                u.people.toString = function () {
                  return u.toString(1) + ".people (stub)";
                },
                o =
                  "capture identify alias people.set people.set_once set_config register register_once unregister opt_out_capturing has_opted_out_capturing opt_in_capturing reset isFeatureEnabled onFeatureFlags getFeatureFlag getFeatureFlagPayload reloadFeatureFlags group updateEarlyAccessFeatureEnrollment getEarlyAccessFeatures getActiveMatchingSurveys getSurveys".split(
                    " ",
                  ),
                n = 0;
              n < o.length;
              n++
            )
              g(u, o[n]);
            e._i.push([i, s, a]);
          }),
          (e.__SV = 1));
        // @ts-expect-error
      })(document, window.posthog || []);
      // @ts-expect-error
      posthog.init("phc_1t30sgscrCzFAMkYj4RCJZqoVB3Z2zwtjtGz4OjzvIN", {
        api_host: "https://app.posthog.com",
      });
    </script>
  </head>
  <body class="m-auto max-w-2xl bg-zinc-900 px-6 text-white">
    <slot />
    <style is:global>
      body {
        font-family:
          "Inter",
          -apple-system,
          sans-serif;
      }
    </style>
  </body><style is:global>
    body {
      font-family:
        "Inter",
        -apple-system,
        sans-serif;
    }
  </style>
</html>
